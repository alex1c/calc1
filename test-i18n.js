// –ü—Ä–æ—Å—Ç–æ–π —Ç–µ—Å—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∑–∞–≥—Ä—É–∑–∫–∏ –ø–µ—Ä–µ–≤–æ–¥–æ–≤
const fs = require('fs');
const path = require('path');

async function testI18n() {
	console.log('üß™ Testing i18n loading...');

	const locale = 'ru';

	try {
		// –ó–∞–≥—Ä—É–∂–∞–µ–º index.json
		const indexPath = path.join(
			__dirname,
			'messages',
			locale,
			'index.json'
		);
		const indexData = JSON.parse(fs.readFileSync(indexPath, 'utf8'));
		console.log('‚úÖ index.json loaded:', Object.keys(indexData));

		// –ó–∞–≥—Ä—É–∂–∞–µ–º –≤—Å–µ —Å–µ–∫—Ü–∏–∏
		const messages = {};

		for (const [key, filePath] of Object.entries(indexData)) {
			try {
				const filePathFull = path.join(
					__dirname,
					'messages',
					locale,
					filePath
				);
				const content = JSON.parse(
					fs.readFileSync(filePathFull, 'utf8')
				);
				messages[key] = content;
				console.log(
					`‚úÖ ${filePath} loaded with keys:`,
					Object.keys(content)
				);
			} catch (error) {
				console.error(`‚ùå Failed to load ${filePath}:`, error.message);
			}
		}

		// –û–±—ä–µ–¥–∏–Ω—è–µ–º –≤—Å–µ –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä—ã –≤ –æ–¥–Ω—É —Å–µ–∫—Ü–∏—é calculators –¥–ª—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏
		const calculators = {};
		Object.keys(messages).forEach((category) => {
			if (category !== 'common' && messages[category]) {
				Object.keys(messages[category]).forEach((calcKey) => {
					calculators[calcKey] = messages[category][calcKey];
				});
			}
		});

		console.log('üìã Available calculators:', Object.keys(calculators));

		// –°–æ–∑–¥–∞–µ–º —Ñ–∏–Ω–∞–ª—å–Ω—É—é —Å—Ç—Ä—É–∫—Ç—É—Ä—É —Å–æ–æ–±—â–µ–Ω–∏–π
		const finalMessages = {
			...messages.common,
			calculators,
		};

		// –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ babyGrowth –µ—Å—Ç—å –≤ calculators
		if (finalMessages.calculators && finalMessages.calculators.babyGrowth) {
			console.log('‚úÖ babyGrowth found in calculators');
			console.log(
				'üìù Title:',
				finalMessages.calculators.babyGrowth.title
			);
			console.log(
				'üìù Description:',
				finalMessages.calculators.babyGrowth.description
			);
		} else {
			console.log('‚ùå babyGrowth not found in calculators');
		}
	} catch (error) {
		console.error('‚ùå Test failed:', error);
	}
}

testI18n();
