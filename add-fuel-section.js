#!/usr/bin/env node

/**
 * Script to add fuel section to English and Russian translation files
 */

const fs = require('fs');
const path = require('path');

/**
 * Add fuel section to a file
 * @param {string} filePath - Path to the translation file
 * @param {string} language - Language code
 */
function addFuelSection(filePath, language) {
	console.log(`Adding fuel section to ${language.toUpperCase()} file...`);

	// Read the file
	let content = fs.readFileSync(filePath, 'utf8');

	// Create backup
	const backupPath = filePath + `.fuel.${language}.backup`;
	fs.writeFileSync(backupPath, content);

	// Parse JSON
	let data = JSON.parse(content);

	// Add fuel section based on language
	if (language === 'en') {
		data.fuel = {
			title: 'Fuel Consumption Calculator',
			description:
				'Calculate fuel consumption, travel distance and fuel costs for trip planning',
			seo: {
				title: 'Fuel Consumption Calculator: Calculate Distance and Costs',
				overview: {
					title: 'Fuel Consumption Calculator',
					content:
						'Fuel consumption calculator is a professional tool for calculating fuel consumption, travel distance and costs. With our calculator you can calculate how much fuel you need for a trip, what distance you can cover with available fuel and plan your fuel costs.',
				},
				modes: {
					title: 'Calculation Modes',
					content:
						'Our fuel consumption calculator provides two calculation modes:',
					distance:
						'Distance calculation by fuel amount and consumption',
					fuel: 'Calculation of required fuel amount for trip',
				},
				advantages: {
					title: 'Calculator Benefits',
					content:
						'Fuel consumption calculator provides many benefits for trip planning:',
					quick: 'Quick calculation in seconds',
					accurate: 'Accurate calculations based on real data',
					planning: 'Trip and fuel budget planning',
					savings: 'Money savings on fuel',
				},
				tips: {
					title: 'Fuel Economy Tips',
					content: 'To reduce fuel consumption:',
					measure: "Regularly measure your car's fuel consumption",
					driving: 'Follow economical driving style',
					maintenance: 'Keep your car in good technical condition',
					planning: 'Plan routes in advance to avoid traffic jams',
				},
			},
			form: {
				title: 'Calculation Parameters',
				mode: 'Calculation Mode',
				modes: {
					distance: 'Calculate Distance',
					distanceDesc: 'How far you can drive',
					fuel: 'Calculate Fuel',
					fuelDesc: 'How much fuel you need',
				},
				consumption: 'Fuel Consumption (L/100 km)',
				fuelAmount: 'Fuel Amount in Tank (L)',
				distance: 'Desired Distance (km)',
				calculate: 'Calculate',
				errors: {
					title: 'Input Errors',
				},
			},
			results: {
				title: 'Calculation Results',
				result: 'Result',
				km: 'km',
				liters: 'L',
				distanceResult: 'You can drive',
				fuelResult: 'For the trip you need',
				details: 'Calculation Details',
				consumption: 'Fuel Consumption',
				fuelAmount: 'Fuel Amount',
				distance: 'Distance',
				calculatedDistance: 'Calculated Distance',
				calculatedFuel: 'Calculated Fuel',
				placeholder: "Enter parameters and click 'Calculate'",
			},
		};
	} else if (language === 'ru') {
		data.fuel = {
			title: '–ö–∞–ª—å–∫—É–ª—è—Ç–æ—Ä —Ä–∞—Å—Ö–æ–¥–∞ —Ç–æ–ø–ª–∏–≤–∞',
			description:
				'–†–∞—Å—á—ë—Ç —Ä–∞—Å—Ö–æ–¥–∞ —Ç–æ–ø–ª–∏–≤–∞, –¥–∏—Å—Ç–∞–Ω—Ü–∏–∏ –ø–æ–µ–∑–¥–∫–∏ –∏ —Å—Ç–æ–∏–º–æ—Å—Ç–∏ —Ç–æ–ø–ª–∏–≤–∞ –¥–ª—è –ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è –ø–æ–µ–∑–¥–æ–∫',
			seo: {
				title: '–ö–∞–ª—å–∫—É–ª—è—Ç–æ—Ä —Ä–∞—Å—Ö–æ–¥–∞ —Ç–æ–ø–ª–∏–≤–∞: —Ä–∞—Å—á—ë—Ç –¥–∏—Å—Ç–∞–Ω—Ü–∏–∏ –∏ —Å—Ç–æ–∏–º–æ—Å—Ç–∏',
				overview: {
					title: '–ö–∞–ª—å–∫—É–ª—è—Ç–æ—Ä —Ä–∞—Å—Ö–æ–¥–∞ —Ç–æ–ø–ª–∏–≤–∞',
					content:
						'–ö–∞–ª—å–∫—É–ª—è—Ç–æ—Ä —Ä–∞—Å—Ö–æ–¥–∞ —Ç–æ–ø–ª–∏–≤–∞ ‚Äî —ç—Ç–æ –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–π –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç –¥–ª—è —Ä–∞—Å—á—ë—Ç–∞ —Ä–∞—Å—Ö–æ–¥–∞ —Ç–æ–ø–ª–∏–≤–∞, –¥–∏—Å—Ç–∞–Ω—Ü–∏–∏ –ø–æ–µ–∑–¥–∫–∏ –∏ —Å—Ç–æ–∏–º–æ—Å—Ç–∏. –° –ø–æ–º–æ—â—å—é –Ω–∞—à–µ–≥–æ –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä–∞ –≤—ã —Å–º–æ–∂–µ—Ç–µ —Ä–∞—Å—Å—á–∏—Ç–∞—Ç—å, —Å–∫–æ–ª—å–∫–æ —Ç–æ–ø–ª–∏–≤–∞ –Ω—É–∂–Ω–æ –¥–ª—è –ø–æ–µ–∑–¥–∫–∏, –∫–∞–∫—É—é –¥–∏—Å—Ç–∞–Ω—Ü–∏—é –º–æ–∂–Ω–æ –ø—Ä–æ–µ—Ö–∞—Ç—å –Ω–∞ –∏–º–µ—é—â–µ–º—Å—è —Ç–æ–ø–ª–∏–≤–µ –∏ —Å–ø–ª–∞–Ω–∏—Ä–æ–≤–∞—Ç—å —Ä–∞—Å—Ö–æ–¥—ã –Ω–∞ —Ç–æ–ø–ª–∏–≤–æ.',
				},
				modes: {
					title: '–†–µ–∂–∏–º—ã —Ä–∞—Å—á—ë—Ç–∞',
					content:
						'–ù–∞—à –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä —Ä–∞—Å—Ö–æ–¥–∞ —Ç–æ–ø–ª–∏–≤–∞ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç –¥–≤–∞ —Ä–µ–∂–∏–º–∞ —Ä–∞—Å—á—ë—Ç–∞:',
					distance:
						'–†–∞—Å—á—ë—Ç –¥–∏—Å—Ç–∞–Ω—Ü–∏–∏ –ø–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤—É —Ç–æ–ø–ª–∏–≤–∞ –∏ —Ä–∞—Å—Ö–æ–¥—É',
					fuel: '–†–∞—Å—á—ë—Ç –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ–≥–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ —Ç–æ–ø–ª–∏–≤–∞ –¥–ª—è –ø–æ–µ–∑–¥–∫–∏',
				},
				advantages: {
					title: '–ü—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞ –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä–∞',
					content:
						'–ö–∞–ª—å–∫—É–ª—è—Ç–æ—Ä —Ä–∞—Å—Ö–æ–¥–∞ —Ç–æ–ø–ª–∏–≤–∞ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç –º–Ω–æ–∂–µ—Å—Ç–≤–æ –ø—Ä–µ–∏–º—É—â–µ—Å—Ç–≤ –¥–ª—è –ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è –ø–æ–µ–∑–¥–æ–∫:',
					quick: '–ë—ã—Å—Ç—Ä—ã–π —Ä–∞—Å—á—ë—Ç –∑–∞ —Å–µ–∫—É–Ω–¥—ã',
					accurate: '–¢–æ—á–Ω—ã–µ —Ä–∞—Å—á—ë—Ç—ã –Ω–∞ –æ—Å–Ω–æ–≤–µ —Ä–µ–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö',
					planning: '–ü–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–µ–∑–¥–æ–∫ –∏ –±—é–¥–∂–µ—Ç–∞ –Ω–∞ —Ç–æ–ø–ª–∏–≤–æ',
					savings: '–≠–∫–æ–Ω–æ–º–∏—è –¥–µ–Ω–µ–≥ –Ω–∞ —Ç–æ–ø–ª–∏–≤–µ',
				},
				tips: {
					title: '–°–æ–≤–µ—Ç—ã –ø–æ —ç–∫–æ–Ω–æ–º–∏–∏ —Ç–æ–ø–ª–∏–≤–∞',
					content: '–î–ª—è —Å–Ω–∏–∂–µ–Ω–∏—è —Ä–∞—Å—Ö–æ–¥–∞ —Ç–æ–ø–ª–∏–≤–∞:',
					measure:
						'–†–µ–≥—É–ª—è—Ä–Ω–æ –∏–∑–º–µ—Ä—è–π—Ç–µ —Ä–∞—Å—Ö–æ–¥ —Ç–æ–ø–ª–∏–≤–∞ –≤–∞—à–µ–≥–æ –∞–≤—Ç–æ–º–æ–±–∏–ª—è',
					driving: '–°–æ–±–ª—é–¥–∞–π—Ç–µ —ç–∫–æ–Ω–æ–º–∏—á–Ω—ã–π —Å—Ç–∏–ª—å –≤–æ–∂–¥–µ–Ω–∏—è',
					maintenance: '–°–ª–µ–¥–∏—Ç–µ –∑–∞ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ–º –∞–≤—Ç–æ–º–æ–±–∏–ª—è',
					planning:
						'–ü–ª–∞–Ω–∏—Ä—É–π—Ç–µ –º–∞—Ä—à—Ä—É—Ç—ã –∑–∞—Ä–∞–Ω–µ–µ –¥–ª—è –∏–∑–±–µ–∂–∞–Ω–∏—è –ø—Ä–æ–±–æ–∫',
				},
			},
			form: {
				title: '–ü–∞—Ä–∞–º–µ—Ç—Ä—ã —Ä–∞—Å—á—ë—Ç–∞',
				mode: '–†–µ–∂–∏–º —Ä–∞—Å—á—ë—Ç–∞',
				modes: {
					distance: '–†–∞—Å—Å—á–∏—Ç–∞—Ç—å –¥–∏—Å—Ç–∞–Ω—Ü–∏—é',
					distanceDesc: '–°–∫–æ–ª—å–∫–æ –º–æ–∂–Ω–æ –ø—Ä–æ–µ—Ö–∞—Ç—å',
					fuel: '–†–∞—Å—Å—á–∏—Ç–∞—Ç—å —Ç–æ–ø–ª–∏–≤–æ',
					fuelDesc: '–°–∫–æ–ª—å–∫–æ –Ω—É–∂–Ω–æ —Ç–æ–ø–ª–∏–≤–∞',
				},
				consumption: '–†–∞—Å—Ö–æ–¥ —Ç–æ–ø–ª–∏–≤–∞ (–ª/100 –∫–º)',
				fuelAmount: '–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç–æ–ø–ª–∏–≤–∞ –≤ –±–∞–∫–µ (–ª)',
				distance: '–ñ–µ–ª–∞–µ–º–∞—è –¥–∏—Å—Ç–∞–Ω—Ü–∏—è (–∫–º)',
				calculate: '–†–∞—Å—Å—á–∏—Ç–∞—Ç—å',
				errors: {
					title: '–û—à–∏–±–∫–∏ –≤ –¥–∞–Ω–Ω—ã—Ö',
				},
			},
			results: {
				title: '–†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ä–∞—Å—á—ë—Ç–∞',
				result: '–†–µ–∑—É–ª—å—Ç–∞—Ç',
				km: '–∫–º',
				liters: '–ª',
				distanceResult: '–í—ã —Å–º–æ–∂–µ—Ç–µ –ø—Ä–æ–µ—Ö–∞—Ç—å',
				fuelResult: '–î–ª—è –ø–æ–µ–∑–¥–∫–∏ –ø–æ—Ç—Ä–µ–±—É–µ—Ç—Å—è',
				details: '–î–µ—Ç–∞–ª–∏ —Ä–∞—Å—á—ë—Ç–∞',
				consumption: '–†–∞—Å—Ö–æ–¥ —Ç–æ–ø–ª–∏–≤–∞',
				fuelAmount: '–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç–æ–ø–ª–∏–≤–∞',
				distance: '–î–∏—Å—Ç–∞–Ω—Ü–∏—è',
				calculatedDistance: '–†–∞—Å—Å—á–∏—Ç–∞–Ω–Ω–∞—è –¥–∏—Å—Ç–∞–Ω—Ü–∏—è',
				calculatedFuel: '–†–∞—Å—Å—á–∏—Ç–∞–Ω–Ω–æ–µ —Ç–æ–ø–ª–∏–≤–æ',
				placeholder: "–í–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –∏ –Ω–∞–∂–º–∏—Ç–µ '–†–∞—Å—Å—á–∏—Ç–∞—Ç—å'",
			},
		};
	}

	// Write back to file
	fs.writeFileSync(filePath, JSON.stringify(data, null, '\t'));
	console.log(`  ‚úÖ Added fuel section to ${filePath}`);
}

/**
 * Main function
 */
function main() {
	console.log('üîß Adding fuel section to translation files...\n');

	const messagesDir = path.join(__dirname, 'messages');

	// Check if directory exists
	if (!fs.existsSync(messagesDir)) {
		console.error(`‚ùå Messages directory not found: ${messagesDir}`);
		process.exit(1);
	}

	// Add fuel section to English file
	const enFile = path.join(messagesDir, 'en.json');
	if (fs.existsSync(enFile)) {
		addFuelSection(enFile, 'en');
	}

	// Add fuel section to Russian file
	const ruFile = path.join(messagesDir, 'ru.json');
	if (fs.existsSync(ruFile)) {
		addFuelSection(ruFile, 'ru');
	}

	console.log('\n‚úÖ Fuel section added to translation files!');
	console.log('\nüìã Summary:');
	console.log('  - Added fuel section to English');
	console.log('  - Added fuel section to Russian');
	console.log('  - Created backup files for all changes');
	console.log('\n‚ö†Ô∏è  Next steps:');
	console.log('  1. Test the fuel-consumption calculator in all languages');
	console.log('  2. Check if the MISSING_MESSAGE errors are resolved');
}

// Run the fix
if (require.main === module) {
	main();
}

module.exports = {
	addFuelSection,
};
