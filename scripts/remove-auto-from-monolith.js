const fs = require('fs');
const path = require('path');

const monolithPath = path.join(__dirname, '..', 'messages', 'ru.json');
const autoCalcs = [
	'car-ownership',
	'osago',
	'kasko',
	'fuel-consumption',
	'customs',
	'traffic-fines',
	'leasing',
	'car-loan',
	'vehicle-tax'
];

console.log('üìñ –ß–∏—Ç–∞—é –º–æ–Ω–æ–ª–∏—Ç–Ω—ã–π —Ñ–∞–π–ª...');
const data = JSON.parse(fs.readFileSync(monolithPath, 'utf8'));

console.log(`üìä –í—Å–µ–≥–æ –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä–æ–≤ –¥–æ —É–¥–∞–ª–µ–Ω–∏—è: ${Object.keys(data.calculators).length}`);

let removed = 0;
let notFound = [];

autoCalcs.forEach(key => {
	if (data.calculators[key]) {
		delete data.calculators[key];
		removed++;
		console.log(`‚úÖ –£–¥–∞–ª–µ–Ω: ${key}`);
	} else {
		notFound.push(key);
		console.log(`‚ö†Ô∏è  –ù–µ –Ω–∞–π–¥–µ–Ω (—É–∂–µ —É–¥–∞–ª–µ–Ω): ${key}`);
	}
});

console.log(`\nüìù –°–æ—Ö—Ä–∞–Ω—è—é –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π —Ñ–∞–π–ª...`);
fs.writeFileSync(monolithPath, JSON.stringify(data, null, '\t'), 'utf8');

console.log(`\n‚úÖ –£–¥–∞–ª–µ–Ω–æ –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä–æ–≤: ${removed}`);
console.log(`üìä –í—Å–µ–≥–æ –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä–æ–≤ –ø–æ—Å–ª–µ —É–¥–∞–ª–µ–Ω–∏—è: ${Object.keys(data.calculators).length}`);

// –ü—Ä–æ–≤–µ—Ä–∫–∞
const stillExists = autoCalcs.filter(k => data.calculators[k]);
if (stillExists.length === 0) {
	console.log('\n‚úÖ –í—Å–µ –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä—ã –ê–≤—Ç–æ —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω—ã –∏–∑ –º–æ–Ω–æ–ª–∏—Ç–∞!');
} else {
	console.log(`\n‚ö†Ô∏è  –û—Å—Ç–∞–ª–∏—Å—å –≤ –º–æ–Ω–æ–ª–∏—Ç–µ: ${stillExists.join(', ')}`);
}

// –í–∞–ª–∏–¥–∞—Ü–∏—è JSON
try {
	JSON.parse(fs.readFileSync(monolithPath, 'utf8'));
	console.log('‚úÖ JSON —Ñ–∞–π–ª –≤–∞–ª–∏–¥–µ–Ω');
} catch (e) {
	console.error('‚ùå JSON —Ñ–∞–π–ª –Ω–µ–≤–∞–ª–∏–¥–µ–Ω:', e.message);
	process.exit(1);
}

