"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/[locale]/calc/wallpaper/page",{

/***/ "(app-pages-browser)/./src/lib/calculators/wallpaper.ts":
/*!******************************************!*\
  !*** ./src/lib/calculators/wallpaper.ts ***!
  \******************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   addDoor: function() { return /* binding */ addDoor; },\n/* harmony export */   addWindow: function() { return /* binding */ addWindow; },\n/* harmony export */   calculateWallpaper: function() { return /* binding */ calculateWallpaper; },\n/* harmony export */   formatWallpaperArea: function() { return /* binding */ formatWallpaperArea; },\n/* harmony export */   formatWallpaperNumber: function() { return /* binding */ formatWallpaperNumber; },\n/* harmony export */   getStandardReservePercentages: function() { return /* binding */ getStandardReservePercentages; },\n/* harmony export */   getStandardRollSizes: function() { return /* binding */ getStandardRollSizes; },\n/* harmony export */   removeDoor: function() { return /* binding */ removeDoor; },\n/* harmony export */   removeWindow: function() { return /* binding */ removeWindow; },\n/* harmony export */   updateDoor: function() { return /* binding */ updateDoor; },\n/* harmony export */   updateWindow: function() { return /* binding */ updateWindow; },\n/* harmony export */   validateWallpaperInput: function() { return /* binding */ validateWallpaperInput; }\n/* harmony export */ });\n// Wallpaper calculation logic and interfaces\nfunction calculateWallpaper(input) {\n    const { roomLength, roomWidth, wallHeight, rollWidth, rollLength, doors, windows, reservePercentage } = input;\n    // Calculate total wall area\n    // Formula: 2 × (Length + Width) × Height\n    const totalWallArea = 2 * (roomLength + roomWidth) * wallHeight;\n    // Calculate doors area\n    const doorsArea = doors.reduce((total, door)=>{\n        return total + door.width * door.height;\n    }, 0);\n    // Calculate windows area\n    const windowsArea = windows.reduce((total, window)=>{\n        return total + window.width * window.height;\n    }, 0);\n    // Total openings area\n    const openingsArea = doorsArea + windowsArea;\n    // Useful wall area (after subtracting openings)\n    const usefulWallArea = Math.max(0, totalWallArea - openingsArea);\n    // Calculate roll area\n    const rollArea = rollWidth * rollLength;\n    // Calculate reserve area\n    const reserveArea = usefulWallArea * (reservePercentage / 100);\n    // Total area needed (useful area + reserve)\n    const totalAreaNeeded = usefulWallArea + reserveArea;\n    // Calculate number of rolls needed\n    const rollsNeeded = Math.ceil(totalAreaNeeded / rollArea);\n    // Recommended rolls (add 1 extra for pattern matching and future repairs)\n    // Only add extra roll if we need more than 1 roll\n    const recommendedRolls = rollsNeeded > 1 ? rollsNeeded + 1 : rollsNeeded;\n    return {\n        // Room dimensions\n        roomLength: Math.round(roomLength * 100) / 100,\n        roomWidth: Math.round(roomWidth * 100) / 100,\n        wallHeight: Math.round(wallHeight * 100) / 100,\n        // Wall area calculations\n        totalWallArea: Math.round(totalWallArea * 100) / 100,\n        doorsArea: Math.round(doorsArea * 100) / 100,\n        windowsArea: Math.round(windowsArea * 100) / 100,\n        openingsArea: Math.round(openingsArea * 100) / 100,\n        usefulWallArea: Math.round(usefulWallArea * 100) / 100,\n        // Roll calculations\n        rollWidth: Math.round(rollWidth * 100) / 100,\n        rollLength: Math.round(rollLength * 100) / 100,\n        rollArea: Math.round(rollArea * 100) / 100,\n        // Reserve and final calculations\n        reservePercentage: Math.round(reservePercentage * 100) / 100,\n        reserveArea: Math.round(reserveArea * 100) / 100,\n        totalAreaNeeded: Math.round(totalAreaNeeded * 100) / 100,\n        rollsNeeded: Math.round(rollsNeeded),\n        recommendedRolls: Math.round(recommendedRolls),\n        // Additional info\n        doorsCount: doors.length,\n        windowsCount: windows.length\n    };\n}\nfunction validateWallpaperInput(input) {\n    const errors = [];\n    // Room dimensions validation\n    if (!input.roomLength || input.roomLength <= 0) {\n        errors.push(\"Длина комнаты должна быть больше 0\");\n    }\n    if (input.roomLength && input.roomLength > 100) {\n        errors.push(\"Длина комнаты не может быть больше 100 метров\");\n    }\n    if (!input.roomWidth || input.roomWidth <= 0) {\n        errors.push(\"Ширина комнаты должна быть больше 0\");\n    }\n    if (input.roomWidth && input.roomWidth > 100) {\n        errors.push(\"Ширина комнаты не может быть больше 100 метров\");\n    }\n    if (!input.wallHeight || input.wallHeight <= 0) {\n        errors.push(\"Высота стен должна быть больше 0\");\n    }\n    if (input.wallHeight && input.wallHeight > 10) {\n        errors.push(\"Высота стен не может быть больше 10 метров\");\n    }\n    // Roll dimensions validation\n    if (!input.rollWidth || input.rollWidth <= 0) {\n        errors.push(\"Ширина рулона должна быть больше 0\");\n    }\n    if (input.rollWidth && input.rollWidth > 5) {\n        errors.push(\"Ширина рулона не может быть больше 5 метров\");\n    }\n    if (!input.rollLength || input.rollLength <= 0) {\n        errors.push(\"Длина рулона должна быть больше 0\");\n    }\n    if (input.rollLength && input.rollLength > 50) {\n        errors.push(\"Длина рулона не может быть больше 50 метров\");\n    }\n    // Reserve percentage validation\n    if (input.reservePercentage !== undefined && input.reservePercentage < 0) {\n        errors.push(\"Запас не может быть отрицательным\");\n    }\n    if (input.reservePercentage && input.reservePercentage > 100) {\n        errors.push(\"Запас не может быть больше 100%\");\n    }\n    // Doors and windows validation\n    if (input.doors) {\n        for(let i = 0; i < input.doors.length; i++){\n            const door = input.doors[i];\n            if (door.width <= 0 || door.height <= 0) {\n                errors.push(\"Дверь \".concat(i + 1, \": размеры должны быть больше 0\"));\n            }\n            if (door.width > 5 || door.height > 5) {\n                errors.push(\"Дверь \".concat(i + 1, \": размеры не могут быть больше 5 метров\"));\n            }\n        }\n    }\n    if (input.windows) {\n        for(let i = 0; i < input.windows.length; i++){\n            const window = input.windows[i];\n            if (window.width <= 0 || window.height <= 0) {\n                errors.push(\"Окно \".concat(i + 1, \": размеры должны быть больше 0\"));\n            }\n            if (window.width > 10 || window.height > 10) {\n                errors.push(\"Окно \".concat(i + 1, \": размеры не могут быть больше 10 метров\"));\n            }\n        }\n    }\n    return errors;\n}\nfunction formatWallpaperArea(area) {\n    return new Intl.NumberFormat(\"ru-RU\", {\n        minimumFractionDigits: 2,\n        maximumFractionDigits: 2\n    }).format(area) + \" м\\xb2\";\n}\nfunction formatWallpaperNumber(value) {\n    return new Intl.NumberFormat(\"ru-RU\", {\n        minimumFractionDigits: 0,\n        maximumFractionDigits: 2\n    }).format(value);\n}\nfunction getStandardRollSizes() {\n    return [\n        {\n            width: 0.53,\n            length: 10.05,\n            label: \"0.53 \\xd7 10.05 м\",\n            description: \"Стандартный размер (европейский)\"\n        },\n        {\n            width: 0.7,\n            length: 10.05,\n            label: \"0.7 \\xd7 10.05 м\",\n            description: \"Широкий рулон\"\n        },\n        {\n            width: 1.06,\n            length: 10.05,\n            label: \"1.06 \\xd7 10.05 м\",\n            description: \"Очень широкий рулон\"\n        },\n        {\n            width: 0.53,\n            length: 15.0,\n            label: \"0.53 \\xd7 15.0 м\",\n            description: \"Длинный рулон\"\n        },\n        {\n            width: 0.7,\n            length: 15.0,\n            label: \"0.7 \\xd7 15.0 м\",\n            description: \"Широкий длинный рулон\"\n        }\n    ];\n}\nfunction getStandardReservePercentages() {\n    return [\n        {\n            value: 5,\n            label: \"5%\",\n            description: \"Минимальный запас\"\n        },\n        {\n            value: 10,\n            label: \"10%\",\n            description: \"Стандартный запас\"\n        },\n        {\n            value: 15,\n            label: \"15%\",\n            description: \"Увеличенный запас\"\n        },\n        {\n            value: 20,\n            label: \"20%\",\n            description: \"Большой запас\"\n        }\n    ];\n}\nfunction addDoor(input) {\n    return {\n        ...input,\n        doors: [\n            ...input.doors,\n            {\n                width: 0.8,\n                height: 2.1\n            }\n        ]\n    };\n}\nfunction addWindow(input) {\n    return {\n        ...input,\n        windows: [\n            ...input.windows,\n            {\n                width: 1.2,\n                height: 1.5\n            }\n        ]\n    };\n}\nfunction removeDoor(input, index) {\n    const newDoors = input.doors.filter((_, i)=>i !== index);\n    return {\n        ...input,\n        doors: newDoors\n    };\n}\nfunction removeWindow(input, index) {\n    const newWindows = input.windows.filter((_, i)=>i !== index);\n    return {\n        ...input,\n        windows: newWindows\n    };\n}\nfunction updateDoor(input, index, door) {\n    const newDoors = [\n        ...input.doors\n    ];\n    newDoors[index] = door;\n    return {\n        ...input,\n        doors: newDoors\n    };\n}\nfunction updateWindow(input, index, window) {\n    const newWindows = [\n        ...input.windows\n    ];\n    newWindows[index] = window;\n    return {\n        ...input,\n        windows: newWindows\n    };\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/lib/calculators/wallpaper.ts\n"));

/***/ })

});