import json
import re

def fix_file_structure(file_path):
    """Fix the structure of translation file by moving root-level calculators into calculators section"""
    print(f"–ò—Å–ø—Ä–∞–≤–ª—è—é —Å—Ç—Ä—É–∫—Ç—É—Ä—É —Ñ–∞–π–ª–∞: {file_path}")
    
    try:
        with open(file_path, 'r', encoding='utf-8') as f:
            lines = f.readlines()
        
        fixed_lines = []
        in_calculators = False
        calculators_ended = False
        
        for i, line in enumerate(lines):
            # –ù–∞—Ö–æ–¥–∏–º –Ω–∞—á–∞–ª–æ —Å–µ–∫—Ü–∏–∏ calculators
            if '"calculators": {' in line:
                in_calculators = True
                fixed_lines.append(line)
                continue
            
            # –ù–∞—Ö–æ–¥–∏–º –∫–æ–Ω–µ—Ü —Å–µ–∫—Ü–∏–∏ calculators (—Å—Ç—Ä–æ–∫–∞ —Å –æ—Ç—Å—Ç—É–ø–æ–º 2 –ø—Ä–æ–±–µ–ª–∞ –∏ })
            if in_calculators and re.match(r'^  }$', line):
                calculators_ended = True
                in_calculators = False
                # –ù–µ –¥–æ–±–∞–≤–ª—è–µ–º —ç—Ç—É —Å—Ç—Ä–æ–∫—É, –æ–Ω–∞ –±—É–¥–µ—Ç –≤ –∫–æ–Ω—Ü–µ
                continue
            
            # –ï—Å–ª–∏ –º—ã –≤–Ω—É—Ç—Ä–∏ —Å–µ–∫—Ü–∏–∏ calculators, –¥–æ–±–∞–≤–ª—è–µ–º —Å—Ç—Ä–æ–∫—É –∫–∞–∫ –µ—Å—Ç—å
            if in_calculators:
                fixed_lines.append(line)
                continue
            
            # –ï—Å–ª–∏ –º—ã –ø–æ—Å–ª–µ —Å–µ–∫—Ü–∏–∏ calculators –∏ –≤–∏–¥–∏–º –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä –Ω–∞ —É—Ä–æ–≤–Ω–µ –∫–æ—Ä–Ω—è (2 –ø—Ä–æ–±–µ–ª–∞)
            if calculators_ended and re.match(r'^  "[a-z-]+": \{', line):
                # –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º –æ—Ç—Å—Ç—É–ø —Å 2 –¥–æ 4 –ø—Ä–æ–±–µ–ª–æ–≤
                fixed_lines.append('  ' + line)
                continue
            
            # –ï—Å–ª–∏ –º—ã –ø–æ—Å–ª–µ —Å–µ–∫—Ü–∏–∏ calculators –∏ –≤–∏–¥–∏–º —Å—Ç—Ä–æ–∫–∏ —Å –æ—Ç—Å—Ç—É–ø–æ–º 2 –∏–ª–∏ 4 –ø—Ä–æ–±–µ–ª–∞ (—Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä–æ–≤)
            if calculators_ended and (re.match(r'^  [^}]', line) or re.match(r'^    ', line)):
                # –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º –æ—Ç—Å—Ç—É–ø –Ω–∞ 2 –ø—Ä–æ–±–µ–ª–∞
                fixed_lines.append('  ' + line)
                continue
            
            # –ï—Å–ª–∏ –º—ã –ø–æ—Å–ª–µ —Å–µ–∫—Ü–∏–∏ calculators –∏ –≤–∏–¥–∏–º –∑–∞–∫—Ä—ã–≤–∞—é—â—É—é —Å–∫–æ–±–∫—É –Ω–∞ —É—Ä–æ–≤–Ω–µ 2 –ø—Ä–æ–±–µ–ª–æ–≤
            if calculators_ended and re.match(r'^  },', line):
                # –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º –æ—Ç—Å—Ç—É–ø —Å 2 –¥–æ 4 –ø—Ä–æ–±–µ–ª–æ–≤
                fixed_lines.append('  ' + line)
                continue
            
            # –ï—Å–ª–∏ —ç—Ç–æ –ø–æ—Å–ª–µ–¥–Ω—è—è –∑–∞–∫—Ä—ã–≤–∞—é—â–∞—è —Å–∫–æ–±–∫–∞ —Ñ–∞–π–ª–∞
            if calculators_ended and line.strip() == '}':
                # –î–æ–±–∞–≤–ª—è–µ–º –∑–∞–∫—Ä—ã–≤–∞—é—â—É—é —Å–∫–æ–±–∫—É —Å–µ–∫—Ü–∏–∏ calculators
                fixed_lines.append('  }\n')
                # –î–æ–±–∞–≤–ª—è–µ–º –∑–∞–∫—Ä—ã–≤–∞—é—â—É—é —Å–∫–æ–±–∫—É —Ñ–∞–π–ª–∞
                fixed_lines.append(line)
                continue
            
            # –í—Å–µ –æ—Å—Ç–∞–ª—å–Ω—ã–µ —Å—Ç—Ä–æ–∫–∏ –¥–æ–±–∞–≤–ª—è–µ–º –∫–∞–∫ –µ—Å—Ç—å
            fixed_lines.append(line)
        
        # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–π —Ñ–∞–π–ª
        with open(file_path, 'w', encoding='utf-8') as f:
            f.writelines(fixed_lines)
        
        print(f"‚úÖ –§–∞–π–ª {file_path} –∏—Å–ø—Ä–∞–≤–ª–µ–Ω —É—Å–ø–µ—à–Ω–æ")
        
    except Exception as error:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–∏ {file_path}: {error}")

# –ò—Å–ø—Ä–∞–≤–ª—è–µ–º —Ñ–∞–π–ª—ã
files_to_fix = [
    'messages/es.json',
    'messages/de.json'
]

for file_path in files_to_fix:
    fix_file_structure(file_path)

print('üéâ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –∑–∞–≤–µ—Ä—à–µ–Ω–æ!')

